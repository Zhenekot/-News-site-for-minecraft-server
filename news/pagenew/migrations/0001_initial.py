# Generated by Django 5.0.1 on 2024-01-09 16:31

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='New',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(validators=[django.core.validators.MinLengthValidator(1, 'Название не может быть пустым.')], verbose_name='Название')),
                ('description', models.TextField(validators=[django.core.validators.MinLengthValidator(1, 'Описание не может быть пустым.')], verbose_name='Описание')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Архивирован')),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, unique=True, validators=[django.core.validators.MinLengthValidator(3, 'Название должно быть длиной не менее 3 символов')], verbose_name='Название')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Архивирован')),
            ],
            options={
                'verbose_name': 'Роль',
                'verbose_name_plural': 'Роли',
            },
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.FileField(upload_to='static/img/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'], 'Только изображения форматов jpg, jpeg, png допустимы.')], verbose_name='Изображение')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Архивирован')),
                ('new', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pagenew.new', verbose_name='Новость')),
            ],
            options={
                'verbose_name': 'Изображение',
                'verbose_name_plural': 'Изображения',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Имя/Фамилия/Отчество должны содержать кириллицу', regex='[а-яА-Я]+')], verbose_name='first name')),
                ('email', models.EmailField(max_length=50, unique=True, verbose_name='email address')),
                ('date_of_birth', models.DateField(verbose_name='Дата рождения')),
                ('login', models.CharField(max_length=25, unique=True, verbose_name='Логин')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('password', models.CharField(max_length=300, verbose_name='Пароль')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Архивирован')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_user_groups', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pagenew.role', verbose_name='Роль')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_permissions', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.AddField(
            model_name='new',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pagenew.user', verbose_name='Автор'),
        ),
    ]
